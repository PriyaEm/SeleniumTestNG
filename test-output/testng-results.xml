<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="1" failed="1" skipped="1">
  <reporter-output>
    <line>
      <![CDATA[This runs once before the class]]>
    </line>
    <line>
      <![CDATA[beforeMethod -> This runs before every method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> testMethod2]]>
    </line>
    <line>
      <![CDATA[afterMethod -> This runs after every method]]>
    </line>
    <line>
      <![CDATA[beforeMethod -> This runs before every method]]>
    </line>
    <line>
      <![CDATA[TestNG_ReportsAndLogs -> testMethod1]]>
    </line>
    <line>
      <![CDATA[afterMethod -> This runs after every method]]>
    </line>
    <line>
      <![CDATA[This runs once after the class]]>
    </line>
  </reporter-output>
  <suite started-at="2022-05-14T21:31:38 IST" name="Listeners TestSuite" finished-at="2022-05-14T21:31:38 IST" duration-ms="50">
    <groups>
    </groups>
    <test started-at="2022-05-14T21:31:38 IST" name="Application Test" finished-at="2022-05-14T21:31:38 IST" duration-ms="50">
      <class name="testclasses.TestNG_ReportsAndLogs">
        <test-method is-config="true" signature="setUp()[pri:0, instance:testclasses.TestNG_ReportsAndLogs@1d2adfbe]" started-at="2022-05-14T21:31:38 IST" name="setUp" finished-at="2022-05-14T21:31:38 IST" duration-ms="5" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[This runs once before the class]]>
            </line>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.TestNG_ReportsAndLogs@1d2adfbe]" started-at="2022-05-14T21:31:38 IST" name="beforeMethod" finished-at="2022-05-14T21:31:38 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[beforeMethod -> This runs before every method]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testMethod2()[pri:0, instance:testclasses.TestNG_ReportsAndLogs@1d2adfbe]" started-at="2022-05-14T21:31:38 IST" name="testMethod2" finished-at="2022-05-14T21:31:38 IST" duration-ms="7" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertTrue(Assert.java:56)
at org.testng.Assert.assertTrue(Assert.java:66)
at testclasses.TestNG_ReportsAndLogs.testMethod2(TestNG_ReportsAndLogs.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:135)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:673)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:220)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:945)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:193)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> testMethod2]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethod2 -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.TestNG_ReportsAndLogs@1d2adfbe]" started-at="2022-05-14T21:31:38 IST" name="afterMethod" finished-at="2022-05-14T21:31:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[afterMethod -> This runs after every method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testMethod1()[pri:0, instance:testclasses.TestNG_ReportsAndLogs@1d2adfbe]" started-at="2022-05-14T21:31:38 IST" name="testMethod1" finished-at="2022-05-14T21:31:38 IST" duration-ms="1" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[TestNG_ReportsAndLogs -> testMethod1]]>
            </line>
          </reporter-output>
        </test-method> <!-- testMethod1 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:testclasses.TestNG_ReportsAndLogs@1d2adfbe]" started-at="2022-05-14T21:31:38 IST" name="beforeMethod" finished-at="2022-05-14T21:31:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[beforeMethod -> This runs before every method]]>
            </line>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:testclasses.TestNG_ReportsAndLogs@1d2adfbe]" started-at="2022-05-14T21:31:38 IST" name="afterMethod" finished-at="2022-05-14T21:31:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[afterMethod -> This runs after every method]]>
            </line>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="testMethod3()[pri:0, instance:testclasses.TestNG_ReportsAndLogs@1d2adfbe]" started-at="2022-05-14T21:31:38 IST" name="testMethod3" finished-at="2022-05-14T21:31:38 IST" depends-on-methods="testclasses.TestNG_ReportsAndLogs.testMethod2" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method testclasses.TestNG_ReportsAndLogs.testMethod3() on instance testclasses.TestNG_ReportsAndLogs@1d2adfbe depends on not successfully finished methods 
[testclasses.TestNG_ReportsAndLogs.testMethod2() on instance testclasses.TestNG_ReportsAndLogs@1d2adfbe]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method testclasses.TestNG_ReportsAndLogs.testMethod3() on instance testclasses.TestNG_ReportsAndLogs@1d2adfbe depends on not successfully finished methods 
[testclasses.TestNG_ReportsAndLogs.testMethod2() on instance testclasses.TestNG_ReportsAndLogs@1d2adfbe]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:149)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:808)
at org.testng.TestRunner.run(TestRunner.java:603)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:429)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:423)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:383)
at org.testng.SuiteRunner.run(SuiteRunner.java:326)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1249)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
at org.testng.TestNG.runSuites(TestNG.java:1092)
at org.testng.TestNG.run(TestNG.java:1060)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod3 -->
        <test-method is-config="true" signature="cleanUP()[pri:0, instance:testclasses.TestNG_ReportsAndLogs@1d2adfbe]" started-at="2022-05-14T21:31:38 IST" name="cleanUP" finished-at="2022-05-14T21:31:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[This runs once after the class]]>
            </line>
          </reporter-output>
        </test-method> <!-- cleanUP -->
      </class> <!-- testclasses.TestNG_ReportsAndLogs -->
    </test> <!-- Application Test -->
  </suite> <!-- Listeners TestSuite -->
</testng-results>
